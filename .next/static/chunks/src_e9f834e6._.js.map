{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Dashboard.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\n\ninterface DashboardStats {\n  totalProducts: number\n  totalCustomers: number\n  totalInvoices: number\n  totalRevenue: number\n  totalGST: number\n  lowStockItems: number\n}\n\nexport default function Dashboard() {\n  const [stats, setStats] = useState<DashboardStats>({\n    totalProducts: 0,\n    totalCustomers: 0,\n    totalInvoices: 0,\n    totalRevenue: 0,\n    totalGST: 0,\n    lowStockItems: 0\n  })\n\n  useEffect(() => {\n    // Load dashboard data from localStorage or API\n    const products = JSON.parse(localStorage.getItem('products') || '[]')\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]')\n    const invoices = JSON.parse(localStorage.getItem('invoices') || '[]')\n\n    const totalRevenue = invoices.reduce((sum: number, invoice: any) => sum + invoice.total, 0)\n    const totalGST = invoices.reduce((sum: number, invoice: any) => sum + invoice.gstAmount, 0)\n    const lowStockItems = products.filter((product: any) => product.quantity < 10).length\n\n    setStats({\n      totalProducts: products.length,\n      totalCustomers: customers.length,\n      totalInvoices: invoices.length,\n      totalRevenue,\n      totalGST,\n      lowStockItems\n    })\n  }, [])\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n        <p className=\"text-muted-foreground\">\n          Overview of your business performance\n        </p>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Products</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.totalProducts}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Items in inventory\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Customers</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.totalCustomers}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Registered customers\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Invoices</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.totalInvoices}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Generated invoices\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrency(stats.totalRevenue)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total sales amount\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">GST Collected</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrency(stats.totalGST)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total GST amount\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Low Stock Alert</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-destructive\">{stats.lowStockItems}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Items below 10 units\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n          <CardDescription>\n            Common tasks to get you started\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid gap-2 md:grid-cols-2 lg:grid-cols-4\">\n            <div className=\"p-4 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\">\n              <h3 className=\"font-medium\">Add Product</h3>\n              <p className=\"text-sm text-muted-foreground\">Add new item to inventory</p>\n            </div>\n            <div className=\"p-4 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\">\n              <h3 className=\"font-medium\">Create Invoice</h3>\n              <p className=\"text-sm text-muted-foreground\">Generate new bill</p>\n            </div>\n            <div className=\"p-4 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\">\n              <h3 className=\"font-medium\">Add Customer</h3>\n              <p className=\"text-sm text-muted-foreground\">Register new customer</p>\n            </div>\n            <div className=\"p-4 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\">\n              <h3 className=\"font-medium\">View Reports</h3>\n              <p className=\"text-sm text-muted-foreground\">Check business analytics</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/InventoryManager.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\n\nconst productSchema = z.object({\n  name: z.string().min(1, \"Product name is required\"),\n  price: z.number().min(0.01, \"Price must be greater than 0\"),\n  quantity: z.number().min(0, \"Quantity cannot be negative\"),\n  gstRate: z.number().min(0).max(100, \"GST rate must be between 0 and 100\"),\n  category: z.string().min(1, \"Category is required\"),\n  description: z.string().optional()\n})\n\ntype ProductFormData = z.infer<typeof productSchema>\n\ninterface Product extends ProductFormData {\n  id: string\n  createdAt: string\n}\n\nexport default function InventoryManager() {\n  const [products, setProducts] = useState<Product[]>([])\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors }\n  } = useForm<ProductFormData>({\n    resolver: zodResolver(productSchema),\n    defaultValues: {\n      name: \"\",\n      price: 0,\n      quantity: 0,\n      gstRate: 18,\n      category: \"\",\n      description: \"\"\n    }\n  })\n\n  useEffect(() => {\n    // Load products from localStorage\n    const savedProducts = localStorage.getItem('products')\n    if (savedProducts) {\n      setProducts(JSON.parse(savedProducts))\n    }\n  }, [])\n\n  useEffect(() => {\n    // Save products to localStorage whenever products change\n    localStorage.setItem('products', JSON.stringify(products))\n  }, [products])\n\n  const onSubmit = (data: ProductFormData) => {\n    if (editingProduct) {\n      // Update existing product\n      setProducts(prev => prev.map(product => \n        product.id === editingProduct.id \n          ? { ...product, ...data }\n          : product\n      ))\n    } else {\n      // Add new product\n      const newProduct: Product = {\n        ...data,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString()\n      }\n      setProducts(prev => [...prev, newProduct])\n    }\n    \n    reset()\n    setIsDialogOpen(false)\n    setEditingProduct(null)\n  }\n\n  const handleEdit = (product: Product) => {\n    setEditingProduct(product)\n    setValue('name', product.name)\n    setValue('price', product.price)\n    setValue('quantity', product.quantity)\n    setValue('gstRate', product.gstRate)\n    setValue('category', product.category)\n    setValue('description', product.description || '')\n    setIsDialogOpen(true)\n  }\n\n  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this product?')) {\n      setProducts(prev => prev.filter(product => product.id !== id))\n    }\n  }\n\n  const filteredProducts = products.filter(product =>\n    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    product.category.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount)\n  }\n\n  const getStockStatus = (quantity: number) => {\n    if (quantity === 0) return { label: 'Out of Stock', variant: 'destructive' as const }\n    if (quantity < 10) return { label: 'Low Stock', variant: 'secondary' as const }\n    return { label: 'In Stock', variant: 'default' as const }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Inventory Management</h2>\n          <p className=\"text-muted-foreground\">\n            Manage your products and stock levels\n          </p>\n        </div>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => {\n              setEditingProduct(null)\n              reset()\n            }}>\n              Add Product\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px]\">\n            <DialogHeader>\n              <DialogTitle>\n                {editingProduct ? 'Edit Product' : 'Add New Product'}\n              </DialogTitle>\n              <DialogDescription>\n                {editingProduct ? 'Update product details' : 'Add a new product to your inventory'}\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n              <div className=\"grid gap-4\">\n                <div>\n                  <Label htmlFor=\"name\">Product Name</Label>\n                  <Input\n                    id=\"name\"\n                    {...register('name')}\n                    placeholder=\"Enter product name\"\n                  />\n                  {errors.name && (\n                    <p className=\"text-sm text-destructive\">{errors.name.message}</p>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"price\">Price (₹)</Label>\n                    <Input\n                      id=\"price\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      {...register('price', { valueAsNumber: true })}\n                      placeholder=\"0.00\"\n                    />\n                    {errors.price && (\n                      <p className=\"text-sm text-destructive\">{errors.price.message}</p>\n                    )}\n                  </div>\n                  <div>\n                    <Label htmlFor=\"quantity\">Quantity</Label>\n                    <Input\n                      id=\"quantity\"\n                      type=\"number\"\n                      {...register('quantity', { valueAsNumber: true })}\n                      placeholder=\"0\"\n                    />\n                    {errors.quantity && (\n                      <p className=\"text-sm text-destructive\">{errors.quantity.message}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"gstRate\">GST Rate (%)</Label>\n                    <Input\n                      id=\"gstRate\"\n                      type=\"number\"\n                      {...register('gstRate', { valueAsNumber: true })}\n                      placeholder=\"18\"\n                    />\n                    {errors.gstRate && (\n                      <p className=\"text-sm text-destructive\">{errors.gstRate.message}</p>\n                    )}\n                  </div>\n                  <div>\n                    <Label htmlFor=\"category\">Category</Label>\n                    <Input\n                      id=\"category\"\n                      {...register('category')}\n                      placeholder=\"Electronics, Clothing, etc.\"\n                    />\n                    {errors.category && (\n                      <p className=\"text-sm text-destructive\">{errors.category.message}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\">Description (Optional)</Label>\n                  <Input\n                    id=\"description\"\n                    {...register('description')}\n                    placeholder=\"Product description\"\n                  />\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\">\n                  {editingProduct ? 'Update Product' : 'Add Product'}\n                </Button>\n              </DialogFooter>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Search and Stats */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex-1\">\n          <Input\n            placeholder=\"Search products...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"max-w-sm\"\n          />\n        </div>\n        <div className=\"flex space-x-4 text-sm text-muted-foreground\">\n          <span>Total Products: {products.length}</span>\n          <span>Low Stock: {products.filter(p => p.quantity < 10).length}</span>\n        </div>\n      </div>\n\n      {/* Products Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Products</CardTitle>\n          <CardDescription>\n            All products in your inventory\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {filteredProducts.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">No products found</p>\n              <p className=\"text-sm text-muted-foreground\">\n                {searchTerm ? 'Try adjusting your search' : 'Add your first product to get started'}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Category</TableHead>\n                  <TableHead>Price</TableHead>\n                  <TableHead>Quantity</TableHead>\n                  <TableHead>GST Rate</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredProducts.map((product) => {\n                  const stockStatus = getStockStatus(product.quantity)\n                  return (\n                    <TableRow key={product.id}>\n                      <TableCell className=\"font-medium\">{product.name}</TableCell>\n                      <TableCell>{product.category}</TableCell>\n                      <TableCell>{formatCurrency(product.price)}</TableCell>\n                      <TableCell>{product.quantity}</TableCell>\n                      <TableCell>{product.gstRate}%</TableCell>\n                      <TableCell>\n                        <Badge variant={stockStatus.variant}>\n                          {stockStatus.label}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleEdit(product)}\n                          >\n                            Edit\n                          </Button>\n                          <Button\n                            variant=\"destructive\"\n                            size=\"sm\"\n                            onClick={() => handleDelete(product.id)}\n                          >\n                            Delete\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2060, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2309, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 2345, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BillingSystem.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\n\nconst invoiceItemSchema = z.object({\n  productId: z.string().min(1, \"Please select a product\"),\n  quantity: z.number().min(1, \"Quantity must be at least 1\")\n})\n\nconst invoiceSchema = z.object({\n  customerId: z.string().min(1, \"Please select a customer\"),\n  items: z.array(invoiceItemSchema).min(1, \"At least one item is required\")\n})\n\ntype InvoiceFormData = z.infer<typeof invoiceSchema>\n\ninterface Product {\n  id: string\n  name: string\n  price: number\n  quantity: number\n  gstRate: number\n  category: string\n}\n\ninterface Customer {\n  id: string\n  name: string\n  email: string\n  phone: string\n  address: string\n}\n\ninterface InvoiceItem {\n  productId: string\n  productName: string\n  quantity: number\n  price: number\n  gstRate: number\n  amount: number\n  gstAmount: number\n  total: number\n}\n\ninterface Invoice {\n  id: string\n  invoiceNumber: string\n  customerId: string\n  customerName: string\n  date: string\n  items: InvoiceItem[]\n  subtotal: number\n  totalGST: number\n  total: number\n  gstAmount: number\n}\n\nexport default function BillingSystem() {\n  const [invoices, setInvoices] = useState<Invoice[]>([])\n  const [products, setProducts] = useState<Product[]>([])\n  const [customers, setCustomers] = useState<Customer[]>([])\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [selectedCustomer, setSelectedCustomer] = useState<string>(\"\")\n  const [invoiceItems, setInvoiceItems] = useState<{productId: string, quantity: number}[]>([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    // Load data from localStorage\n    const savedInvoices = localStorage.getItem('invoices')\n    const savedProducts = localStorage.getItem('products')\n    const savedCustomers = localStorage.getItem('customers')\n    \n    if (savedInvoices) setInvoices(JSON.parse(savedInvoices))\n    if (savedProducts) setProducts(JSON.parse(savedProducts))\n    if (savedCustomers) setCustomers(JSON.parse(savedCustomers))\n  }, [])\n\n  useEffect(() => {\n    // Save invoices to localStorage\n    localStorage.setItem('invoices', JSON.stringify(invoices))\n  }, [invoices])\n\n  const generateInvoiceNumber = () => {\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const sequence = String(invoices.length + 1).padStart(4, '0')\n    return `INV-${year}${month}${day}-${sequence}`\n  }\n\n  const addInvoiceItem = () => {\n    setInvoiceItems([...invoiceItems, { productId: \"\", quantity: 1 }])\n  }\n\n  const removeInvoiceItem = (index: number) => {\n    setInvoiceItems(invoiceItems.filter((_, i) => i !== index))\n  }\n\n  const updateInvoiceItem = (index: number, field: 'productId' | 'quantity', value: string | number) => {\n    const updatedItems = [...invoiceItems]\n    updatedItems[index] = { ...updatedItems[index], [field]: value }\n    setInvoiceItems(updatedItems)\n  }\n\n  const calculateInvoiceTotal = () => {\n    let subtotal = 0\n    let totalGST = 0\n    \n    const calculatedItems: InvoiceItem[] = invoiceItems.map(item => {\n      const product = products.find(p => p.id === item.productId)\n      if (!product) return null\n      \n      const amount = product.price * item.quantity\n      const gstAmount = (amount * product.gstRate) / 100\n      const total = amount + gstAmount\n      \n      subtotal += amount\n      totalGST += gstAmount\n      \n      return {\n        productId: product.id,\n        productName: product.name,\n        quantity: item.quantity,\n        price: product.price,\n        gstRate: product.gstRate,\n        amount,\n        gstAmount,\n        total\n      }\n    }).filter(Boolean) as InvoiceItem[]\n    \n    return {\n      items: calculatedItems,\n      subtotal,\n      totalGST,\n      grandTotal: subtotal + totalGST\n    }\n  }\n\n  const createInvoice = () => {\n    if (!selectedCustomer || invoiceItems.length === 0) {\n      alert('Please select a customer and add at least one item')\n      return\n    }\n\n    const customer = customers.find(c => c.id === selectedCustomer)\n    if (!customer) return\n\n    const calculation = calculateInvoiceTotal()\n    \n    const newInvoice: Invoice = {\n      id: Date.now().toString(),\n      invoiceNumber: generateInvoiceNumber(),\n      customerId: selectedCustomer,\n      customerName: customer.name,\n      date: new Date().toISOString(),\n      items: calculation.items,\n      subtotal: calculation.subtotal,\n      totalGST: calculation.totalGST,\n      total: calculation.grandTotal,\n      gstAmount: calculation.totalGST\n    }\n\n    // Update product quantities\n    const updatedProducts = products.map(product => {\n      const invoiceItem = calculation.items.find(item => item.productId === product.id)\n      if (invoiceItem) {\n        return {\n          ...product,\n          quantity: product.quantity - invoiceItem.quantity\n        }\n      }\n      return product\n    })\n    \n    setProducts(updatedProducts)\n    localStorage.setItem('products', JSON.stringify(updatedProducts))\n    \n    setInvoices([...invoices, newInvoice])\n    setIsDialogOpen(false)\n    setSelectedCustomer(\"\")\n    setInvoiceItems([])\n  }\n\n  const filteredInvoices = invoices.filter(invoice =>\n    invoice.invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    invoice.customerName.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount)\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-IN')\n  }\n\n  const calculation = calculateInvoiceTotal()\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Billing System</h2>\n          <p className=\"text-muted-foreground\">\n            Create and manage invoices with GST calculations\n          </p>\n        </div>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => {\n              setSelectedCustomer(\"\")\n              setInvoiceItems([])\n            }}>\n              Create Invoice\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[800px] max-h-[80vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle>Create New Invoice</DialogTitle>\n              <DialogDescription>\n                Generate a new invoice with GST calculations\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"space-y-6\">\n              {/* Customer Selection */}\n              <div>\n                <Label>Select Customer</Label>\n                <Select value={selectedCustomer} onValueChange={setSelectedCustomer}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Choose a customer\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {customers.map(customer => (\n                      <SelectItem key={customer.id} value={customer.id}>\n                        {customer.name} - {customer.phone}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Invoice Items */}\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <Label>Invoice Items</Label>\n                  <Button type=\"button\" variant=\"outline\" onClick={addInvoiceItem}>\n                    Add Item\n                  </Button>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  {invoiceItems.map((item, index) => (\n                    <div key={index} className=\"flex items-center space-x-4 p-4 border rounded\">\n                      <div className=\"flex-1\">\n                        <Select \n                          value={item.productId} \n                          onValueChange={(value) => updateInvoiceItem(index, 'productId', value)}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select product\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {products.filter(p => p.quantity > 0).map(product => (\n                              <SelectItem key={product.id} value={product.id}>\n                                {product.name} - {formatCurrency(product.price)} (Stock: {product.quantity})\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"w-24\">\n                        <Input\n                          type=\"number\"\n                          min=\"1\"\n                          value={item.quantity}\n                          onChange={(e) => updateInvoiceItem(index, 'quantity', parseInt(e.target.value) || 1)}\n                          placeholder=\"Qty\"\n                        />\n                      </div>\n                      <Button\n                        type=\"button\"\n                        variant=\"destructive\"\n                        size=\"sm\"\n                        onClick={() => removeInvoiceItem(index)}\n                      >\n                        Remove\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Invoice Summary */}\n              {calculation.items.length > 0 && (\n                <div className=\"border rounded p-4\">\n                  <h3 className=\"font-semibold mb-4\">Invoice Summary</h3>\n                  <div className=\"space-y-2\">\n                    {calculation.items.map((item, index) => (\n                      <div key={index} className=\"flex justify-between text-sm\">\n                        <span>{item.productName} x {item.quantity}</span>\n                        <span>{formatCurrency(item.total)}</span>\n                      </div>\n                    ))}\n                    <Separator />\n                    <div className=\"flex justify-between\">\n                      <span>Subtotal:</span>\n                      <span>{formatCurrency(calculation.subtotal)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>GST:</span>\n                      <span>{formatCurrency(calculation.totalGST)}</span>\n                    </div>\n                    <div className=\"flex justify-between font-bold\">\n                      <span>Total:</span>\n                      <span>{formatCurrency(calculation.grandTotal)}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <DialogFooter>\n              <Button onClick={createInvoice} disabled={!selectedCustomer || invoiceItems.length === 0}>\n                Create Invoice\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Search */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex-1\">\n          <Input\n            placeholder=\"Search invoices...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"max-w-sm\"\n          />\n        </div>\n        <div className=\"flex space-x-4 text-sm text-muted-foreground\">\n          <span>Total Invoices: {invoices.length}</span>\n          <span>Total Revenue: {formatCurrency(invoices.reduce((sum, inv) => sum + inv.total, 0))}</span>\n        </div>\n      </div>\n\n      {/* Invoices Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Invoices</CardTitle>\n          <CardDescription>\n            All generated invoices\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {filteredInvoices.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">No invoices found</p>\n              <p className=\"text-sm text-muted-foreground\">\n                {searchTerm ? 'Try adjusting your search' : 'Create your first invoice to get started'}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Invoice #</TableHead>\n                  <TableHead>Customer</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Items</TableHead>\n                  <TableHead>Subtotal</TableHead>\n                  <TableHead>GST</TableHead>\n                  <TableHead>Total</TableHead>\n                  <TableHead>Status</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredInvoices.map((invoice) => (\n                  <TableRow key={invoice.id}>\n                    <TableCell className=\"font-medium\">{invoice.invoiceNumber}</TableCell>\n                    <TableCell>{invoice.customerName}</TableCell>\n                    <TableCell>{formatDate(invoice.date)}</TableCell>\n                    <TableCell>{invoice.items.length} items</TableCell>\n                    <TableCell>{formatCurrency(invoice.subtotal)}</TableCell>\n                    <TableCell>{formatCurrency(invoice.totalGST)}</TableCell>\n                    <TableCell className=\"font-medium\">{formatCurrency(invoice.total)}</TableCell>\n                    <TableCell>\n                      <Badge variant=\"default\">Paid</Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAdA;;;;;;;;;;;;AAgBA,MAAM,oBAAoB,CAAA,GAAA,qIAAA,CAAA,SAAQ,AAAD,EAAE;IACjC,WAAW,CAAA,GAAA,qIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAC7B,UAAU,CAAA,GAAA,qIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;AAC9B;AAEA,MAAM,gBAAgB,CAAA,GAAA,qIAAA,CAAA,SAAQ,AAAD,EAAE;IAC7B,YAAY,CAAA,GAAA,qIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAC9B,OAAO,CAAA,GAAA,qIAAA,CAAA,QAAO,AAAD,EAAE,mBAAmB,GAAG,CAAC,GAAG;AAC3C;AA6Ce,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2C,EAAE;IAC5F,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,8BAA8B;YAC9B,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,MAAM,iBAAiB,aAAa,OAAO,CAAC;YAE5C,IAAI,eAAe,YAAY,KAAK,KAAK,CAAC;YAC1C,IAAI,eAAe,YAAY,KAAK,KAAK,CAAC;YAC1C,IAAI,gBAAgB,aAAa,KAAK,KAAK,CAAC;QAC9C;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,gCAAgC;YAChC,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;QAClD;kCAAG;QAAC;KAAS;IAEb,MAAM,wBAAwB;QAC5B,MAAM,OAAO,IAAI;QACjB,MAAM,OAAO,KAAK,WAAW;QAC7B,MAAM,QAAQ,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG;QACtD,MAAM,MAAM,OAAO,KAAK,OAAO,IAAI,QAAQ,CAAC,GAAG;QAC/C,MAAM,WAAW,OAAO,SAAS,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;QACzD,OAAO,CAAC,IAAI,EAAE,OAAO,QAAQ,IAAI,CAAC,EAAE,UAAU;IAChD;IAEA,MAAM,iBAAiB;QACrB,gBAAgB;eAAI;YAAc;gBAAE,WAAW;gBAAI,UAAU;YAAE;SAAE;IACnE;IAEA,MAAM,oBAAoB,CAAC;QACzB,gBAAgB,aAAa,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IACtD;IAEA,MAAM,oBAAoB,CAAC,OAAe,OAAiC;QACzE,MAAM,eAAe;eAAI;SAAa;QACtC,YAAY,CAAC,MAAM,GAAG;YAAE,GAAG,YAAY,CAAC,MAAM;YAAE,CAAC,MAAM,EAAE;QAAM;QAC/D,gBAAgB;IAClB;IAEA,MAAM,wBAAwB;QAC5B,IAAI,WAAW;QACf,IAAI,WAAW;QAEf,MAAM,kBAAiC,aAAa,GAAG,CAAC,CAAA;YACtD,MAAM,UAAU,SAAS,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,SAAS;YAC1D,IAAI,CAAC,SAAS,OAAO;YAErB,MAAM,SAAS,QAAQ,KAAK,GAAG,KAAK,QAAQ;YAC5C,MAAM,YAAY,AAAC,SAAS,QAAQ,OAAO,GAAI;YAC/C,MAAM,QAAQ,SAAS;YAEvB,YAAY;YACZ,YAAY;YAEZ,OAAO;gBACL,WAAW,QAAQ,EAAE;gBACrB,aAAa,QAAQ,IAAI;gBACzB,UAAU,KAAK,QAAQ;gBACvB,OAAO,QAAQ,KAAK;gBACpB,SAAS,QAAQ,OAAO;gBACxB;gBACA;gBACA;YACF;QACF,GAAG,MAAM,CAAC;QAEV,OAAO;YACL,OAAO;YACP;YACA;YACA,YAAY,WAAW;QACzB;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,oBAAoB,aAAa,MAAM,KAAK,GAAG;YAClD,MAAM;YACN;QACF;QAEA,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC9C,IAAI,CAAC,UAAU;QAEf,MAAM,cAAc;QAEpB,MAAM,aAAsB;YAC1B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,eAAe;YACf,YAAY;YACZ,cAAc,SAAS,IAAI;YAC3B,MAAM,IAAI,OAAO,WAAW;YAC5B,OAAO,YAAY,KAAK;YACxB,UAAU,YAAY,QAAQ;YAC9B,UAAU,YAAY,QAAQ;YAC9B,OAAO,YAAY,UAAU;YAC7B,WAAW,YAAY,QAAQ;QACjC;QAEA,4BAA4B;QAC5B,MAAM,kBAAkB,SAAS,GAAG,CAAC,CAAA;YACnC,MAAM,cAAc,YAAY,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,SAAS,KAAK,QAAQ,EAAE;YAChF,IAAI,aAAa;gBACf,OAAO;oBACL,GAAG,OAAO;oBACV,UAAU,QAAQ,QAAQ,GAAG,YAAY,QAAQ;gBACnD;YACF;YACA,OAAO;QACT;QAEA,YAAY;QACZ,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;QAEhD,YAAY;eAAI;YAAU;SAAW;QACrC,gBAAgB;QAChB,oBAAoB;QACpB,gBAAgB,EAAE;IACpB;IAEA,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAA,UACvC,QAAQ,aAAa,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACnE,QAAQ,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;IAGpE,MAAM,iBAAiB,CAAC;QACtB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC;IACjD;IAEA,MAAM,cAAc;IAEpB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAIvC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,MAAM;wBAAc,cAAc;;0CACxC,6LAAC,qIAAA,CAAA,gBAAa;gCAAC,OAAO;0CACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAS;wCACf,oBAAoB;wCACpB,gBAAgB,EAAE;oCACpB;8CAAG;;;;;;;;;;;0CAIL,6LAAC,qIAAA,CAAA,gBAAa;gCAAC,WAAU;;kDACvB,6LAAC,qIAAA,CAAA,eAAY;;0DACX,6LAAC,qIAAA,CAAA,cAAW;0DAAC;;;;;;0DACb,6LAAC,qIAAA,CAAA,oBAAiB;0DAAC;;;;;;;;;;;;kDAKrB,6LAAC;wCAAI,WAAU;;0DAEb,6LAAC;;kEACC,6LAAC,oIAAA,CAAA,QAAK;kEAAC;;;;;;kEACP,6LAAC,qIAAA,CAAA,SAAM;wDAAC,OAAO;wDAAkB,eAAe;;0EAC9C,6LAAC,qIAAA,CAAA,gBAAa;0EACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;oEAAC,aAAY;;;;;;;;;;;0EAE3B,6LAAC,qIAAA,CAAA,gBAAa;0EACX,UAAU,GAAG,CAAC,CAAA,yBACb,6LAAC,qIAAA,CAAA,aAAU;wEAAmB,OAAO,SAAS,EAAE;;4EAC7C,SAAS,IAAI;4EAAC;4EAAI,SAAS,KAAK;;uEADlB,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;0DASpC,6LAAC;;kEACC,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,oIAAA,CAAA,QAAK;0EAAC;;;;;;0EACP,6LAAC,qIAAA,CAAA,SAAM;gEAAC,MAAK;gEAAS,SAAQ;gEAAU,SAAS;0EAAgB;;;;;;;;;;;;kEAKnE,6LAAC;wDAAI,WAAU;kEACZ,aAAa,GAAG,CAAC,CAAC,MAAM,sBACvB,6LAAC;gEAAgB,WAAU;;kFACzB,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;4EACL,OAAO,KAAK,SAAS;4EACrB,eAAe,CAAC,QAAU,kBAAkB,OAAO,aAAa;;8FAEhE,6LAAC,qIAAA,CAAA,gBAAa;8FACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;wFAAC,aAAY;;;;;;;;;;;8FAE3B,6LAAC,qIAAA,CAAA,gBAAa;8FACX,SAAS,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAA,wBACxC,6LAAC,qIAAA,CAAA,aAAU;4FAAkB,OAAO,QAAQ,EAAE;;gGAC3C,QAAQ,IAAI;gGAAC;gGAAI,eAAe,QAAQ,KAAK;gGAAE;gGAAU,QAAQ,QAAQ;gGAAC;;2FAD5D,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;kFAOnC,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;4EACJ,MAAK;4EACL,KAAI;4EACJ,OAAO,KAAK,QAAQ;4EACpB,UAAU,CAAC,IAAM,kBAAkB,OAAO,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;4EAClF,aAAY;;;;;;;;;;;kFAGhB,6LAAC,qIAAA,CAAA,SAAM;wEACL,MAAK;wEACL,SAAQ;wEACR,MAAK;wEACL,SAAS,IAAM,kBAAkB;kFAClC;;;;;;;+DAhCO;;;;;;;;;;;;;;;;4CAyCf,YAAY,KAAK,CAAC,MAAM,GAAG,mBAC1B,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAG,WAAU;kEAAqB;;;;;;kEACnC,6LAAC;wDAAI,WAAU;;4DACZ,YAAY,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC5B,6LAAC;oEAAgB,WAAU;;sFACzB,6LAAC;;gFAAM,KAAK,WAAW;gFAAC;gFAAI,KAAK,QAAQ;;;;;;;sFACzC,6LAAC;sFAAM,eAAe,KAAK,KAAK;;;;;;;mEAFxB;;;;;0EAKZ,6LAAC,wIAAA,CAAA,YAAS;;;;;0EACV,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;kFAAK;;;;;;kFACN,6LAAC;kFAAM,eAAe,YAAY,QAAQ;;;;;;;;;;;;0EAE5C,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;kFAAK;;;;;;kFACN,6LAAC;kFAAM,eAAe,YAAY,QAAQ;;;;;;;;;;;;0EAE5C,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;kFAAK;;;;;;kFACN,6LAAC;kFAAM,eAAe,YAAY,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDAOtD,6LAAC,qIAAA,CAAA,eAAY;kDACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAS;4CAAe,UAAU,CAAC,oBAAoB,aAAa,MAAM,KAAK;sDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASlG,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;4BACJ,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,WAAU;;;;;;;;;;;kCAGd,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAK;oCAAiB,SAAS,MAAM;;;;;;;0CACtC,6LAAC;;oCAAK;oCAAgB,eAAe,SAAS,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,IAAI,KAAK,EAAE;;;;;;;;;;;;;;;;;;;0BAKxF,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,mIAAA,CAAA,cAAW;kCACT,iBAAiB,MAAM,KAAK,kBAC3B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;8CACrC,6LAAC;oCAAE,WAAU;8CACV,aAAa,8BAA8B;;;;;;;;;;;iDAIhD,6LAAC,oIAAA,CAAA,QAAK;;8CACJ,6LAAC,oIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;0DACP,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;;;;;;;8CAGf,6LAAC,oIAAA,CAAA,YAAS;8CACP,iBAAiB,GAAG,CAAC,CAAC,wBACrB,6LAAC,oIAAA,CAAA,WAAQ;;8DACP,6LAAC,oIAAA,CAAA,YAAS;oDAAC,WAAU;8DAAe,QAAQ,aAAa;;;;;;8DACzD,6LAAC,oIAAA,CAAA,YAAS;8DAAE,QAAQ,YAAY;;;;;;8DAChC,6LAAC,oIAAA,CAAA,YAAS;8DAAE,WAAW,QAAQ,IAAI;;;;;;8DACnC,6LAAC,oIAAA,CAAA,YAAS;;wDAAE,QAAQ,KAAK,CAAC,MAAM;wDAAC;;;;;;;8DACjC,6LAAC,oIAAA,CAAA,YAAS;8DAAE,eAAe,QAAQ,QAAQ;;;;;;8DAC3C,6LAAC,oIAAA,CAAA,YAAS;8DAAE,eAAe,QAAQ,QAAQ;;;;;;8DAC3C,6LAAC,oIAAA,CAAA,YAAS;oDAAC,WAAU;8DAAe,eAAe,QAAQ,KAAK;;;;;;8DAChE,6LAAC,oIAAA,CAAA,YAAS;8DACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;;;;;;;2CATd,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoB3C;GA3VwB;KAAA","debugId":null}},
    {"offset": {"line": 3248, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 3279, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CustomerManager.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\n\nconst customerSchema = z.object({\n  name: z.string().min(1, \"Customer name is required\"),\n  email: z.string().email(\"Please enter a valid email\").optional().or(z.literal(\"\")),\n  phone: z.string().min(10, \"Phone number must be at least 10 digits\"),\n  address: z.string().min(1, \"Address is required\"),\n  gstNumber: z.string().optional(),\n  company: z.string().optional()\n})\n\ntype CustomerFormData = z.infer<typeof customerSchema>\n\ninterface Customer extends CustomerFormData {\n  id: string\n  createdAt: string\n  totalPurchases: number\n  lastPurchase?: string\n}\n\nexport default function CustomerManager() {\n  const [customers, setCustomers] = useState<Customer[]>([])\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [editingCustomer, setEditingCustomer] = useState<Customer | null>(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors }\n  } = useForm<CustomerFormData>({\n    resolver: zodResolver(customerSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      gstNumber: \"\",\n      company: \"\"\n    }\n  })\n\n  useEffect(() => {\n    // Load customers from localStorage\n    const savedCustomers = localStorage.getItem('customers')\n    if (savedCustomers) {\n      setCustomers(JSON.parse(savedCustomers))\n    }\n  }, [])\n\n  useEffect(() => {\n    // Save customers to localStorage whenever customers change\n    localStorage.setItem('customers', JSON.stringify(customers))\n  }, [customers])\n\n  useEffect(() => {\n    // Update customer purchase data from invoices\n    const invoices = JSON.parse(localStorage.getItem('invoices') || '[]')\n    \n    setCustomers(prevCustomers => \n      prevCustomers.map(customer => {\n        const customerInvoices = invoices.filter((inv: any) => inv.customerId === customer.id)\n        const totalPurchases = customerInvoices.reduce((sum: number, inv: any) => sum + inv.total, 0)\n        const lastPurchase = customerInvoices.length > 0 \n          ? customerInvoices.sort((a: any, b: any) => new Date(b.date).getTime() - new Date(a.date).getTime())[0].date\n          : undefined\n\n        return {\n          ...customer,\n          totalPurchases,\n          lastPurchase\n        }\n      })\n    )\n  }, [])\n\n  const onSubmit = (data: CustomerFormData) => {\n    if (editingCustomer) {\n      // Update existing customer\n      setCustomers(prev => prev.map(customer => \n        customer.id === editingCustomer.id \n          ? { ...customer, ...data }\n          : customer\n      ))\n    } else {\n      // Add new customer\n      const newCustomer: Customer = {\n        ...data,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        totalPurchases: 0\n      }\n      setCustomers(prev => [...prev, newCustomer])\n    }\n    \n    reset()\n    setIsDialogOpen(false)\n    setEditingCustomer(null)\n  }\n\n  const handleEdit = (customer: Customer) => {\n    setEditingCustomer(customer)\n    setValue('name', customer.name)\n    setValue('email', customer.email || '')\n    setValue('phone', customer.phone)\n    setValue('address', customer.address)\n    setValue('gstNumber', customer.gstNumber || '')\n    setValue('company', customer.company || '')\n    setIsDialogOpen(true)\n  }\n\n  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this customer?')) {\n      setCustomers(prev => prev.filter(customer => customer.id !== id))\n    }\n  }\n\n  const filteredCustomers = customers.filter(customer =>\n    customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    customer.phone.includes(searchTerm) ||\n    (customer.email && customer.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\n    (customer.company && customer.company.toLowerCase().includes(searchTerm.toLowerCase()))\n  )\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount)\n  }\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Never'\n    return new Date(dateString).toLocaleDateString('en-IN')\n  }\n\n  const getCustomerType = (totalPurchases: number) => {\n    if (totalPurchases === 0) return { label: 'New', variant: 'secondary' as const }\n    if (totalPurchases < 10000) return { label: 'Regular', variant: 'default' as const }\n    if (totalPurchases < 50000) return { label: 'Premium', variant: 'secondary' as const }\n    return { label: 'VIP', variant: 'default' as const }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Customer Management</h2>\n          <p className=\"text-muted-foreground\">\n            Manage your customer database and relationships\n          </p>\n        </div>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => {\n              setEditingCustomer(null)\n              reset()\n            }}>\n              Add Customer\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[500px]\">\n            <DialogHeader>\n              <DialogTitle>\n                {editingCustomer ? 'Edit Customer' : 'Add New Customer'}\n              </DialogTitle>\n              <DialogDescription>\n                {editingCustomer ? 'Update customer details' : 'Add a new customer to your database'}\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n              <div className=\"grid gap-4\">\n                <div>\n                  <Label htmlFor=\"name\">Customer Name *</Label>\n                  <Input\n                    id=\"name\"\n                    {...register('name')}\n                    placeholder=\"Enter customer name\"\n                  />\n                  {errors.name && (\n                    <p className=\"text-sm text-destructive\">{errors.name.message}</p>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"phone\">Phone Number *</Label>\n                    <Input\n                      id=\"phone\"\n                      {...register('phone')}\n                      placeholder=\"Enter phone number\"\n                    />\n                    {errors.phone && (\n                      <p className=\"text-sm text-destructive\">{errors.phone.message}</p>\n                    )}\n                  </div>\n                  <div>\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      {...register('email')}\n                      placeholder=\"Enter email address\"\n                    />\n                    {errors.email && (\n                      <p className=\"text-sm text-destructive\">{errors.email.message}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"company\">Company Name</Label>\n                  <Input\n                    id=\"company\"\n                    {...register('company')}\n                    placeholder=\"Enter company name (optional)\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"gstNumber\">GST Number</Label>\n                  <Input\n                    id=\"gstNumber\"\n                    {...register('gstNumber')}\n                    placeholder=\"Enter GST number (optional)\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"address\">Address *</Label>\n                  <Textarea\n                    id=\"address\"\n                    {...register('address')}\n                    placeholder=\"Enter complete address\"\n                    rows={3}\n                  />\n                  {errors.address && (\n                    <p className=\"text-sm text-destructive\">{errors.address.message}</p>\n                  )}\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\">\n                  {editingCustomer ? 'Update Customer' : 'Add Customer'}\n                </Button>\n              </DialogFooter>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Search and Stats */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex-1\">\n          <Input\n            placeholder=\"Search customers...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"max-w-sm\"\n          />\n        </div>\n        <div className=\"flex space-x-4 text-sm text-muted-foreground\">\n          <span>Total Customers: {customers.length}</span>\n          <span>Active: {customers.filter(c => c.totalPurchases > 0).length}</span>\n        </div>\n      </div>\n\n      {/* Customer Stats Cards */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Customers</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{customers.length}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Customers</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{customers.filter(c => c.totalPurchases > 0).length}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Premium Customers</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{customers.filter(c => c.totalPurchases >= 10000).length}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(customers.reduce((sum, c) => sum + c.totalPurchases, 0))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Customers Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Customers</CardTitle>\n          <CardDescription>\n            All customers in your database\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {filteredCustomers.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">No customers found</p>\n              <p className=\"text-sm text-muted-foreground\">\n                {searchTerm ? 'Try adjusting your search' : 'Add your first customer to get started'}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Contact</TableHead>\n                  <TableHead>Company</TableHead>\n                  <TableHead>Total Purchases</TableHead>\n                  <TableHead>Last Purchase</TableHead>\n                  <TableHead>Type</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredCustomers.map((customer) => {\n                  const customerType = getCustomerType(customer.totalPurchases)\n                  return (\n                    <TableRow key={customer.id}>\n                      <TableCell>\n                        <div>\n                          <div className=\"font-medium\">{customer.name}</div>\n                          {customer.email && (\n                            <div className=\"text-sm text-muted-foreground\">{customer.email}</div>\n                          )}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div>\n                          <div>{customer.phone}</div>\n                          <div className=\"text-sm text-muted-foreground truncate max-w-[150px]\">\n                            {customer.address}\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.company || '-'}</TableCell>\n                      <TableCell>{formatCurrency(customer.totalPurchases)}</TableCell>\n                      <TableCell>{formatDate(customer.lastPurchase)}</TableCell>\n                      <TableCell>\n                        <Badge variant={customerType.variant}>\n                          {customerType.label}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleEdit(customer)}\n                          >\n                            Edit\n                          </Button>\n                          <Button\n                            variant=\"destructive\"\n                            size=\"sm\"\n                            onClick={() => handleDelete(customer.id)}\n                          >\n                            Delete\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4280, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ReportsView.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\ninterface ReportData {\n  totalSales: number\n  totalGST: number\n  totalInvoices: number\n  averageOrderValue: number\n  topProducts: Array<{\n    name: string\n    quantity: number\n    revenue: number\n  }>\n  monthlySales: Array<{\n    month: string\n    sales: number\n    gst: number\n  }>\n  gstBreakdown: Array<{\n    rate: number\n    amount: number\n    count: number\n  }>\n}\n\nexport default function ReportsView() {\n  const [reportData, setReportData] = useState<ReportData>({\n    totalSales: 0,\n    totalGST: 0,\n    totalInvoices: 0,\n    averageOrderValue: 0,\n    topProducts: [],\n    monthlySales: [],\n    gstBreakdown: []\n  })\n  const [dateRange, setDateRange] = useState('all')\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n\n  useEffect(() => {\n    generateReports()\n  }, [dateRange, startDate, endDate])\n\n  const generateReports = () => {\n    const invoices = JSON.parse(localStorage.getItem('invoices') || '[]')\n    const products = JSON.parse(localStorage.getItem('products') || '[]')\n    \n    // Filter invoices based on date range\n    let filteredInvoices = invoices\n    \n    if (dateRange !== 'all') {\n      const now = new Date()\n      let filterDate = new Date()\n      \n      switch (dateRange) {\n        case 'today':\n          filterDate.setHours(0, 0, 0, 0)\n          break\n        case 'week':\n          filterDate.setDate(now.getDate() - 7)\n          break\n        case 'month':\n          filterDate.setMonth(now.getMonth() - 1)\n          break\n        case 'year':\n          filterDate.setFullYear(now.getFullYear() - 1)\n          break\n        case 'custom':\n          if (startDate && endDate) {\n            filteredInvoices = invoices.filter((invoice: any) => {\n              const invoiceDate = new Date(invoice.date)\n              return invoiceDate >= new Date(startDate) && invoiceDate <= new Date(endDate)\n            })\n          }\n          break\n      }\n      \n      if (dateRange !== 'custom') {\n        filteredInvoices = invoices.filter((invoice: any) => \n          new Date(invoice.date) >= filterDate\n        )\n      }\n    }\n\n    // Calculate basic metrics\n    const totalSales = filteredInvoices.reduce((sum: number, invoice: any) => sum + invoice.total, 0)\n    const totalGST = filteredInvoices.reduce((sum: number, invoice: any) => sum + invoice.totalGST, 0)\n    const totalInvoices = filteredInvoices.length\n    const averageOrderValue = totalInvoices > 0 ? totalSales / totalInvoices : 0\n\n    // Calculate top products\n    const productSales: { [key: string]: { name: string, quantity: number, revenue: number } } = {}\n    \n    filteredInvoices.forEach((invoice: any) => {\n      invoice.items.forEach((item: any) => {\n        if (productSales[item.productId]) {\n          productSales[item.productId].quantity += item.quantity\n          productSales[item.productId].revenue += item.total\n        } else {\n          productSales[item.productId] = {\n            name: item.productName,\n            quantity: item.quantity,\n            revenue: item.total\n          }\n        }\n      })\n    })\n\n    const topProducts = Object.values(productSales)\n      .sort((a, b) => b.revenue - a.revenue)\n      .slice(0, 10)\n\n    // Calculate monthly sales\n    const monthlySalesMap: { [key: string]: { sales: number, gst: number } } = {}\n    \n    filteredInvoices.forEach((invoice: any) => {\n      const date = new Date(invoice.date)\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`\n      \n      if (monthlySalesMap[monthKey]) {\n        monthlySalesMap[monthKey].sales += invoice.total\n        monthlySalesMap[monthKey].gst += invoice.totalGST\n      } else {\n        monthlySalesMap[monthKey] = {\n          sales: invoice.total,\n          gst: invoice.totalGST\n        }\n      }\n    })\n\n    const monthlySales = Object.entries(monthlySalesMap)\n      .map(([month, data]) => ({ month, ...data }))\n      .sort((a, b) => a.month.localeCompare(b.month))\n\n    // Calculate GST breakdown\n    const gstBreakdownMap: { [key: number]: { amount: number, count: number } } = {}\n    \n    filteredInvoices.forEach((invoice: any) => {\n      invoice.items.forEach((item: any) => {\n        const rate = item.gstRate\n        if (gstBreakdownMap[rate]) {\n          gstBreakdownMap[rate].amount += item.gstAmount\n          gstBreakdownMap[rate].count += 1\n        } else {\n          gstBreakdownMap[rate] = {\n            amount: item.gstAmount,\n            count: 1\n          }\n        }\n      })\n    })\n\n    const gstBreakdown = Object.entries(gstBreakdownMap)\n      .map(([rate, data]) => ({ rate: Number(rate), ...data }))\n      .sort((a, b) => a.rate - b.rate)\n\n    setReportData({\n      totalSales,\n      totalGST,\n      totalInvoices,\n      averageOrderValue,\n      topProducts,\n      monthlySales,\n      gstBreakdown\n    })\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount)\n  }\n\n  const formatMonth = (monthString: string) => {\n    const [year, month] = monthString.split('-')\n    const date = new Date(Number(year), Number(month) - 1)\n    return date.toLocaleDateString('en-IN', { year: 'numeric', month: 'long' })\n  }\n\n  const exportToCSV = (data: any[], filename: string) => {\n    if (data.length === 0) return\n    \n    const headers = Object.keys(data[0])\n    const csvContent = [\n      headers.join(','),\n      ...data.map(row => headers.map(header => row[header]).join(','))\n    ].join('\\n')\n    \n    const blob = new Blob([csvContent], { type: 'text/csv' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `${filename}.csv`\n    a.click()\n    window.URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Reports & Analytics</h2>\n          <p className=\"text-muted-foreground\">\n            Business insights and performance metrics\n          </p>\n        </div>\n      </div>\n\n      {/* Date Range Filter */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Filter Reports</CardTitle>\n          <CardDescription>Select date range for report generation</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center space-x-4\">\n            <div>\n              <Label>Date Range</Label>\n              <Select value={dateRange} onValueChange={setDateRange}>\n                <SelectTrigger className=\"w-[180px]\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Time</SelectItem>\n                  <SelectItem value=\"today\">Today</SelectItem>\n                  <SelectItem value=\"week\">Last 7 Days</SelectItem>\n                  <SelectItem value=\"month\">Last Month</SelectItem>\n                  <SelectItem value=\"year\">Last Year</SelectItem>\n                  <SelectItem value=\"custom\">Custom Range</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            {dateRange === 'custom' && (\n              <>\n                <div>\n                  <Label>Start Date</Label>\n                  <Input\n                    type=\"date\"\n                    value={startDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label>End Date</Label>\n                  <Input\n                    type=\"date\"\n                    value={endDate}\n                    onChange={(e) => setEndDate(e.target.value)}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Key Metrics */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Sales</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrency(reportData.totalSales)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              From {reportData.totalInvoices} invoices\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">GST Collected</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrency(reportData.totalGST)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {((reportData.totalGST / reportData.totalSales) * 100 || 0).toFixed(1)}% of total sales\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Average Order Value</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrency(reportData.averageOrderValue)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Per invoice average\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Invoices</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{reportData.totalInvoices}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Generated invoices\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Detailed Reports */}\n      <Tabs defaultValue=\"products\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"products\">Top Products</TabsTrigger>\n          <TabsTrigger value=\"monthly\">Monthly Sales</TabsTrigger>\n          <TabsTrigger value=\"gst\">GST Breakdown</TabsTrigger>\n          <TabsTrigger value=\"export\">Export Data</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"products\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Top Selling Products</CardTitle>\n              <CardDescription>Products ranked by revenue generated</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {reportData.topProducts.length === 0 ? (\n                <p className=\"text-center py-8 text-muted-foreground\">No sales data available</p>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Rank</TableHead>\n                      <TableHead>Product Name</TableHead>\n                      <TableHead>Quantity Sold</TableHead>\n                      <TableHead>Revenue</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {reportData.topProducts.map((product, index) => (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <Badge variant={index < 3 ? \"default\" : \"secondary\"}>\n                            #{index + 1}\n                          </Badge>\n                        </TableCell>\n                        <TableCell className=\"font-medium\">{product.name}</TableCell>\n                        <TableCell>{product.quantity}</TableCell>\n                        <TableCell>{formatCurrency(product.revenue)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"monthly\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Monthly Sales Report</CardTitle>\n              <CardDescription>Sales and GST collection by month</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {reportData.monthlySales.length === 0 ? (\n                <p className=\"text-center py-8 text-muted-foreground\">No sales data available</p>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Month</TableHead>\n                      <TableHead>Total Sales</TableHead>\n                      <TableHead>GST Collected</TableHead>\n                      <TableHead>Net Sales</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {reportData.monthlySales.map((month, index) => (\n                      <TableRow key={index}>\n                        <TableCell className=\"font-medium\">{formatMonth(month.month)}</TableCell>\n                        <TableCell>{formatCurrency(month.sales)}</TableCell>\n                        <TableCell>{formatCurrency(month.gst)}</TableCell>\n                        <TableCell>{formatCurrency(month.sales - month.gst)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"gst\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>GST Breakdown</CardTitle>\n              <CardDescription>GST collection by tax rates</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {reportData.gstBreakdown.length === 0 ? (\n                <p className=\"text-center py-8 text-muted-foreground\">No GST data available</p>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>GST Rate</TableHead>\n                      <TableHead>Items Count</TableHead>\n                      <TableHead>GST Amount</TableHead>\n                      <TableHead>Percentage</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {reportData.gstBreakdown.map((gst, index) => (\n                      <TableRow key={index}>\n                        <TableCell className=\"font-medium\">{gst.rate}%</TableCell>\n                        <TableCell>{gst.count}</TableCell>\n                        <TableCell>{formatCurrency(gst.amount)}</TableCell>\n                        <TableCell>\n                          {((gst.amount / reportData.totalGST) * 100 || 0).toFixed(1)}%\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"export\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Export Reports</CardTitle>\n              <CardDescription>Download reports in CSV format</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <Button \n                  onClick={() => exportToCSV(reportData.topProducts, 'top-products')}\n                  disabled={reportData.topProducts.length === 0}\n                >\n                  Export Top Products\n                </Button>\n                <Button \n                  onClick={() => exportToCSV(reportData.monthlySales, 'monthly-sales')}\n                  disabled={reportData.monthlySales.length === 0}\n                >\n                  Export Monthly Sales\n                </Button>\n                <Button \n                  onClick={() => exportToCSV(reportData.gstBreakdown, 'gst-breakdown')}\n                  disabled={reportData.gstBreakdown.length === 0}\n                >\n                  Export GST Breakdown\n                </Button>\n                <Button \n                  onClick={() => {\n                    const invoices = JSON.parse(localStorage.getItem('invoices') || '[]')\n                    exportToCSV(invoices, 'all-invoices')\n                  }}\n                  disabled={reportData.totalInvoices === 0}\n                >\n                  Export All Invoices\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;AAkCe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;QACvD,YAAY;QACZ,UAAU;QACV,eAAe;QACf,mBAAmB;QACnB,aAAa,EAAE;QACf,cAAc,EAAE;QAChB,cAAc,EAAE;IAClB;IACA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG;QAAC;QAAW;QAAW;KAAQ;IAElC,MAAM,kBAAkB;QACtB,MAAM,WAAW,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAe;QAChE,MAAM,WAAW,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAe;QAEhE,sCAAsC;QACtC,IAAI,mBAAmB;QAEvB,IAAI,cAAc,OAAO;YACvB,MAAM,MAAM,IAAI;YAChB,IAAI,aAAa,IAAI;YAErB,OAAQ;gBACN,KAAK;oBACH,WAAW,QAAQ,CAAC,GAAG,GAAG,GAAG;oBAC7B;gBACF,KAAK;oBACH,WAAW,OAAO,CAAC,IAAI,OAAO,KAAK;oBACnC;gBACF,KAAK;oBACH,WAAW,QAAQ,CAAC,IAAI,QAAQ,KAAK;oBACrC;gBACF,KAAK;oBACH,WAAW,WAAW,CAAC,IAAI,WAAW,KAAK;oBAC3C;gBACF,KAAK;oBACH,IAAI,aAAa,SAAS;wBACxB,mBAAmB,SAAS,MAAM,CAAC,CAAC;4BAClC,MAAM,cAAc,IAAI,KAAK,QAAQ,IAAI;4BACzC,OAAO,eAAe,IAAI,KAAK,cAAc,eAAe,IAAI,KAAK;wBACvE;oBACF;oBACA;YACJ;YAEA,IAAI,cAAc,UAAU;gBAC1B,mBAAmB,SAAS,MAAM,CAAC,CAAC,UAClC,IAAI,KAAK,QAAQ,IAAI,KAAK;YAE9B;QACF;QAEA,0BAA0B;QAC1B,MAAM,aAAa,iBAAiB,MAAM,CAAC,CAAC,KAAa,UAAiB,MAAM,QAAQ,KAAK,EAAE;QAC/F,MAAM,WAAW,iBAAiB,MAAM,CAAC,CAAC,KAAa,UAAiB,MAAM,QAAQ,QAAQ,EAAE;QAChG,MAAM,gBAAgB,iBAAiB,MAAM;QAC7C,MAAM,oBAAoB,gBAAgB,IAAI,aAAa,gBAAgB;QAE3E,yBAAyB;QACzB,MAAM,eAAuF,CAAC;QAE9F,iBAAiB,OAAO,CAAC,CAAC;YACxB,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrB,IAAI,YAAY,CAAC,KAAK,SAAS,CAAC,EAAE;oBAChC,YAAY,CAAC,KAAK,SAAS,CAAC,CAAC,QAAQ,IAAI,KAAK,QAAQ;oBACtD,YAAY,CAAC,KAAK,SAAS,CAAC,CAAC,OAAO,IAAI,KAAK,KAAK;gBACpD,OAAO;oBACL,YAAY,CAAC,KAAK,SAAS,CAAC,GAAG;wBAC7B,MAAM,KAAK,WAAW;wBACtB,UAAU,KAAK,QAAQ;wBACvB,SAAS,KAAK,KAAK;oBACrB;gBACF;YACF;QACF;QAEA,MAAM,cAAc,OAAO,MAAM,CAAC,cAC/B,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,OAAO,GAAG,EAAE,OAAO,EACpC,KAAK,CAAC,GAAG;QAEZ,0BAA0B;QAC1B,MAAM,kBAAqE,CAAC;QAE5E,iBAAiB,OAAO,CAAC,CAAC;YACxB,MAAM,OAAO,IAAI,KAAK,QAAQ,IAAI;YAClC,MAAM,WAAW,GAAG,KAAK,WAAW,GAAG,CAAC,EAAE,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG,MAAM;YAExF,IAAI,eAAe,CAAC,SAAS,EAAE;gBAC7B,eAAe,CAAC,SAAS,CAAC,KAAK,IAAI,QAAQ,KAAK;gBAChD,eAAe,CAAC,SAAS,CAAC,GAAG,IAAI,QAAQ,QAAQ;YACnD,OAAO;gBACL,eAAe,CAAC,SAAS,GAAG;oBAC1B,OAAO,QAAQ,KAAK;oBACpB,KAAK,QAAQ,QAAQ;gBACvB;YACF;QACF;QAEA,MAAM,eAAe,OAAO,OAAO,CAAC,iBACjC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;gBAAE;gBAAO,GAAG,IAAI;YAAC,CAAC,GAC1C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK;QAE/C,0BAA0B;QAC1B,MAAM,kBAAwE,CAAC;QAE/E,iBAAiB,OAAO,CAAC,CAAC;YACxB,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrB,MAAM,OAAO,KAAK,OAAO;gBACzB,IAAI,eAAe,CAAC,KAAK,EAAE;oBACzB,eAAe,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,SAAS;oBAC9C,eAAe,CAAC,KAAK,CAAC,KAAK,IAAI;gBACjC,OAAO;oBACL,eAAe,CAAC,KAAK,GAAG;wBACtB,QAAQ,KAAK,SAAS;wBACtB,OAAO;oBACT;gBACF;YACF;QACF;QAEA,MAAM,eAAe,OAAO,OAAO,CAAC,iBACjC,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,GAAK,CAAC;gBAAE,MAAM,OAAO;gBAAO,GAAG,IAAI;YAAC,CAAC,GACtD,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,GAAG,EAAE,IAAI;QAEjC,cAAc;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;QACF;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,CAAC,MAAM,MAAM,GAAG,YAAY,KAAK,CAAC;QACxC,MAAM,OAAO,IAAI,KAAK,OAAO,OAAO,OAAO,SAAS;QACpD,OAAO,KAAK,kBAAkB,CAAC,SAAS;YAAE,MAAM;YAAW,OAAO;QAAO;IAC3E;IAEA,MAAM,cAAc,CAAC,MAAa;QAChC,IAAI,KAAK,MAAM,KAAK,GAAG;QAEvB,MAAM,UAAU,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;QACnC,MAAM,aAAa;YACjB,QAAQ,IAAI,CAAC;eACV,KAAK,GAAG,CAAC,CAAA,MAAO,QAAQ,GAAG,CAAC,CAAA,SAAU,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;SAC5D,CAAC,IAAI,CAAC;QAEP,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAAW;QACvD,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC;QACvC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG,GAAG,SAAS,IAAI,CAAC;QAC9B,EAAE,KAAK;QACP,OAAO,GAAG,CAAC,eAAe,CAAC;IAC7B;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAoC;;;;;;sCAClD,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;0BAOzC,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAW,eAAe;;8DACvC,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;sEACxB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAQ;;;;;;sEAC1B,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAO;;;;;;sEACzB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAQ;;;;;;sEAC1B,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAO;;;;;;sEACzB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAS;;;;;;;;;;;;;;;;;;;;;;;;gCAKhC,cAAc,0BACb;;sDACE,6LAAC;;8DACC,6LAAC,oIAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,6LAAC,oIAAA,CAAA,QAAK;oDACJ,MAAK;oDACL,OAAO;oDACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sDAGhD,6LAAC;;8DACC,6LAAC,oIAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,6LAAC,oIAAA,CAAA,QAAK;oDACJ,MAAK;oDACL,OAAO;oDACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUxD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAsB;;;;;;;;;;;0CAE7C,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,eAAe,WAAW,UAAU;;;;;;kDACzE,6LAAC;wCAAE,WAAU;;4CAAgC;4CACrC,WAAW,aAAa;4CAAC;;;;;;;;;;;;;;;;;;;kCAKrC,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAsB;;;;;;;;;;;0CAE7C,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,eAAe,WAAW,QAAQ;;;;;;kDACvE,6LAAC;wCAAE,WAAU;;4CACV,CAAC,AAAC,WAAW,QAAQ,GAAG,WAAW,UAAU,GAAI,OAAO,CAAC,EAAE,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;;kCAK7E,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAsB;;;;;;;;;;;0CAE7C,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,eAAe,WAAW,iBAAiB;;;;;;kDAChF,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;;;;;;;kCAMjD,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAsB;;;;;;;;;;;0CAE7C,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,WAAW,aAAa;;;;;;kDAC7D,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;;;;;;;;;;;;;0BAQnD,6LAAC,mIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,6LAAC,mIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAClB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;0CAC7B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAM;;;;;;0CACzB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAS;;;;;;;;;;;;kCAG9B,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAW,WAAU;kCACtC,cAAA,6LAAC,mIAAA,CAAA,OAAI;;8CACH,6LAAC,mIAAA,CAAA,aAAU;;sDACT,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,mIAAA,CAAA,cAAW;8CACT,WAAW,WAAW,CAAC,MAAM,KAAK,kBACjC,6LAAC;wCAAE,WAAU;kDAAyC;;;;;6DAEtD,6LAAC,oIAAA,CAAA,QAAK;;0DACJ,6LAAC,oIAAA,CAAA,cAAW;0DACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACP,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;;;;;;;;;;;;0DAGf,6LAAC,oIAAA,CAAA,YAAS;0DACP,WAAW,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,sBACpC,6LAAC,oIAAA,CAAA,WAAQ;;0EACP,6LAAC,oIAAA,CAAA,YAAS;0EACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;oEAAC,SAAS,QAAQ,IAAI,YAAY;;wEAAa;wEACjD,QAAQ;;;;;;;;;;;;0EAGd,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAe,QAAQ,IAAI;;;;;;0EAChD,6LAAC,oIAAA,CAAA,YAAS;0EAAE,QAAQ,QAAQ;;;;;;0EAC5B,6LAAC,oIAAA,CAAA,YAAS;0EAAE,eAAe,QAAQ,OAAO;;;;;;;uDAR7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAkB7B,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAU,WAAU;kCACrC,cAAA,6LAAC,mIAAA,CAAA,OAAI;;8CACH,6LAAC,mIAAA,CAAA,aAAU;;sDACT,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,mIAAA,CAAA,cAAW;8CACT,WAAW,YAAY,CAAC,MAAM,KAAK,kBAClC,6LAAC;wCAAE,WAAU;kDAAyC;;;;;6DAEtD,6LAAC,oIAAA,CAAA,QAAK;;0DACJ,6LAAC,oIAAA,CAAA,cAAW;0DACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACP,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;;;;;;;;;;;;0DAGf,6LAAC,oIAAA,CAAA,YAAS;0DACP,WAAW,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,sBACnC,6LAAC,oIAAA,CAAA,WAAQ;;0EACP,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAe,YAAY,MAAM,KAAK;;;;;;0EAC3D,6LAAC,oIAAA,CAAA,YAAS;0EAAE,eAAe,MAAM,KAAK;;;;;;0EACtC,6LAAC,oIAAA,CAAA,YAAS;0EAAE,eAAe,MAAM,GAAG;;;;;;0EACpC,6LAAC,oIAAA,CAAA,YAAS;0EAAE,eAAe,MAAM,KAAK,GAAG,MAAM,GAAG;;;;;;;uDAJrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAc7B,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAM,WAAU;kCACjC,cAAA,6LAAC,mIAAA,CAAA,OAAI;;8CACH,6LAAC,mIAAA,CAAA,aAAU;;sDACT,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,mIAAA,CAAA,cAAW;8CACT,WAAW,YAAY,CAAC,MAAM,KAAK,kBAClC,6LAAC;wCAAE,WAAU;kDAAyC;;;;;6DAEtD,6LAAC,oIAAA,CAAA,QAAK;;0DACJ,6LAAC,oIAAA,CAAA,cAAW;0DACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACP,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,oIAAA,CAAA,YAAS;sEAAC;;;;;;;;;;;;;;;;;0DAGf,6LAAC,oIAAA,CAAA,YAAS;0DACP,WAAW,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,sBACjC,6LAAC,oIAAA,CAAA,WAAQ;;0EACP,6LAAC,oIAAA,CAAA,YAAS;gEAAC,WAAU;;oEAAe,IAAI,IAAI;oEAAC;;;;;;;0EAC7C,6LAAC,oIAAA,CAAA,YAAS;0EAAE,IAAI,KAAK;;;;;;0EACrB,6LAAC,oIAAA,CAAA,YAAS;0EAAE,eAAe,IAAI,MAAM;;;;;;0EACrC,6LAAC,oIAAA,CAAA,YAAS;;oEACP,CAAC,AAAC,IAAI,MAAM,GAAG,WAAW,QAAQ,GAAI,OAAO,CAAC,EAAE,OAAO,CAAC;oEAAG;;;;;;;;uDALjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAgB7B,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAS,WAAU;kCACpC,cAAA,6LAAC,mIAAA,CAAA,OAAI;;8CACH,6LAAC,mIAAA,CAAA,aAAU;;sDACT,6LAAC,mIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,mIAAA,CAAA,cAAW;oCAAC,WAAU;8CACrB,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,qIAAA,CAAA,SAAM;gDACL,SAAS,IAAM,YAAY,WAAW,WAAW,EAAE;gDACnD,UAAU,WAAW,WAAW,CAAC,MAAM,KAAK;0DAC7C;;;;;;0DAGD,6LAAC,qIAAA,CAAA,SAAM;gDACL,SAAS,IAAM,YAAY,WAAW,YAAY,EAAE;gDACpD,UAAU,WAAW,YAAY,CAAC,MAAM,KAAK;0DAC9C;;;;;;0DAGD,6LAAC,qIAAA,CAAA,SAAM;gDACL,SAAS,IAAM,YAAY,WAAW,YAAY,EAAE;gDACpD,UAAU,WAAW,YAAY,CAAC,MAAM,KAAK;0DAC9C;;;;;;0DAGD,6LAAC,qIAAA,CAAA,SAAM;gDACL,SAAS;oDACP,MAAM,WAAW,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAe;oDAChE,YAAY,UAAU;gDACxB;gDACA,UAAU,WAAW,aAAa,KAAK;0DACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;GA9bwB;KAAA","debugId":null}},
    {"offset": {"line": 5506, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Separator } from \"@/components/ui/separator\"\nimport Dashboard from '@/components/Dashboard'\nimport InventoryManager from '@/components/InventoryManager'\nimport BillingSystem from '@/components/BillingSystem'\nimport CustomerManager from '@/components/CustomerManager'\nimport ReportsView from '@/components/ReportsView'\n\nexport default function Home() {\n  const [activeTab, setActiveTab] = useState(\"dashboard\")\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-foreground\">Business Manager</h1>\n              <p className=\"text-sm text-muted-foreground\">Complete billing and inventory management system</p>\n            </div>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              GST Compliant\n            </Badge>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"container mx-auto px-4 py-6\">\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-5 mb-6\">\n            <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n            <TabsTrigger value=\"inventory\">Inventory</TabsTrigger>\n            <TabsTrigger value=\"billing\">Billing</TabsTrigger>\n            <TabsTrigger value=\"customers\">Customers</TabsTrigger>\n            <TabsTrigger value=\"reports\">Reports</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"dashboard\" className=\"space-y-6\">\n            <Dashboard />\n          </TabsContent>\n\n          <TabsContent value=\"inventory\" className=\"space-y-6\">\n            <InventoryManager />\n          </TabsContent>\n\n          <TabsContent value=\"billing\" className=\"space-y-6\">\n            <BillingSystem />\n          </TabsContent>\n\n          <TabsContent value=\"customers\" className=\"space-y-6\">\n            <CustomerManager />\n          </TabsContent>\n\n          <TabsContent value=\"reports\" className=\"space-y-6\">\n            <ReportsView />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAZA;;;;;;;;;AAce,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAqC;;;;;;kDACnD,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,6LAAC,oIAAA,CAAA,QAAK;gCAAC,SAAQ;gCAAU,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;0BAQnD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;oBAAC,OAAO;oBAAW,eAAe;oBAAc,WAAU;;sCAC7D,6LAAC,mIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAY;;;;;;8CAC/B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAY;;;;;;8CAC/B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAU;;;;;;8CAC7B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAY;;;;;;8CAC/B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAU;;;;;;;;;;;;sCAG/B,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAY,WAAU;sCACvC,cAAA,6LAAC,kIAAA,CAAA,UAAS;;;;;;;;;;sCAGZ,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAY,WAAU;sCACvC,cAAA,6LAAC,yIAAA,CAAA,UAAgB;;;;;;;;;;sCAGnB,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAU,WAAU;sCACrC,cAAA,6LAAC,sIAAA,CAAA,UAAa;;;;;;;;;;sCAGhB,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAY,WAAU;sCACvC,cAAA,6LAAC,wIAAA,CAAA,UAAe;;;;;;;;;;sCAGlB,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAU,WAAU;sCACrC,cAAA,6LAAC,oIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxB;GAtDwB;KAAA","debugId":null}}]
}